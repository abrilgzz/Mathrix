start : sem_start_program declaration func_declaration

declaration : var_declaration declaration
    | matrix_declaration declaration
    | empty

var_declaration : var_type ID sem_add_var ";" 

matrix_declaration : MATRIX var_type ID sem_get_matrix_id "[" CTE_I sem_get_dim1 "]" "[" CTE_I sem_get_dim2 "]" sem_add_matrix ";"

matrix : "[" sem_check_dim1 exp "]" sem_ver_dim1 "[" sem_check_dim2 exp "]" sem_ver_dim2
    | empty

func_declaration : func_signature func_declaration
    | main

func_signature : FUNCTION func_type func_signature_1 sem_end_func

func_signature_1 : ID sem_add_func "(" param_declaration ")" block

param_declaration : var_type ID sem_add_param
    | var_type ID sem_add_param "," param_declaration
    | empty

var_type : INT sem_get_type
    | DOUBLE sem_get_type
    | BOOL sem_get_type

var_cte : CTE_I sem_push_constant_int
    | CTE_D sem_push_constant_double
    | cte_b sem_push_constant_bool
    | ID sem_push_operand matrix 
    | ID sem_check_function "(" sem_false_bottom_begin sem_create_era param_call ")" sem_false_bottom_end sem_count_params sem_gosub 

cte_b : TRUE
    | FALSE

func_type : INT sem_get_type
    | DOUBLE sem_get_type
    | BOOL sem_get_type
    | VOID sem_get_type

block : "{" declaration statements "}" 

statements : statement statements
    | empty

statement : var_assignment
    | matrix_assignment
    | condition
    | return
    | function_call  
    | while_cycle
    | read
    | write
    | swap
    | multiply_matrix
    | add_to_matrix
    | subtract_from_matrix
    | p_matrix

var_assignment : ID sem_push_operand matrix "||" sem_push_operator mega_exp sem_assign_value ";"

matrix_assignment : MATRIX ID sem_push_operand "||" sem_push_operator matrix_construct sem_assign_matrix ";"

matrix_construct : "{" rows "}" 

rows : row
    | row "," rows

row : "[" col "]" sem_push_row sem_clear_row

col : CTE_I sem_push_col col
    | CTE_B sem_push_col col
    | "," col
    | empty

return : RETURN mega_exp sem_return_function ";"

mega_exp : hyper_exp mega_exp_1

mega_exp_1 : "&&" sem_push_operator mega_exp sem_top_logical
    | "||" sem_push_operator mega_exp sem_top_logical
    | empty

hyper_exp : exp hyper_exp_1 

hyper_exp_1 : "==" sem_push_operator exp sem_top_relational
    | "!=" sem_push_operator exp sem_top_relational
    | ">" sem_push_operator exp sem_top_relational
    | "<" sem_push_operator exp sem_top_relational
    | ">=" sem_push_operator exp sem_top_relational
    | "<=" sem_push_operator exp sem_top_relational
    | empty 

exp : term sem_top_term
    | term sem_top_term "+" sem_push_operator exp
    | term sem_top_term "-" sem_push_operator exp

term : factor sem_top_factor
    | factor sem_top_factor "*" sem_push_operator term
    | factor sem_top_factor "/" sem_push_operator term

factor : "(" sem_false_bottom_begin mega_exp ")" sem_false_bottom_end
    | var_cte 
    | "+" sem_push_operator var_cte
    | "-" sem_push_operator var_cte

condition : IF "(" mega_exp ")" sem_end_condition block condition_1 sem_fill_gotof

condition_1 : ELSE sem_else_condition block
    | empty

function_call : ID sem_check_function "(" sem_create_era param_call ")" sem_count_params ";" sem_gosub

param_call : mega_exp sem_check_param 
    | mega_exp sem_check_param "," param_call
    | empty

while_cycle : WHILE sem_start_while "(" mega_exp ")" sem_end_condition block sem_end_while

read : READ sem_push_operator "(" mega_exp ")" sem_read_write ";"

write : WRITE sem_push_operator "(" mega_exp ")" sem_read_write ";"

p_matrix : P_MATRIX "(" ID sem_push_operand ")" ";" sem_print_matrix

multiply_matrix : MULTIPLY_MATRIX "(" ID sem_push_operand "," CTE_I sem_push_constant_int ")" ";" sem_multiply_matrix

add_to_matrix : ADD_TO_MATRIX "(" ID sem_push_operand "," CTE_I sem_push_constant_int ")" ";" sem_add_to_matrix

subtract_from_matrix : SUBTRACT_FROM_MATRIX "(" ID sem_push_operand "," CTE_I sem_push_constant_int ")" ";" sem_subtract_from_matrix

swap : SWAP "(" mega_exp "," mega_exp ")" ";" sem_swap

main : MAIN sem_fill_goto_main block sem_fill_eras sem_end_main

